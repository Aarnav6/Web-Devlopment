* {
    font-family: cursive;
    text-align: center;
}
body{
    background-color: #97DFFC;
}
h1 {
    text-decoration:rgb(134, 8, 8) underline dashed;
    text-transform: capitalize;
}
.outer-box {
    background-color: #9C89B8;
    border-radius: 10px;
    padding: 15px;
    margin: 8px;
}
.inner-box {
    background-color: #EDE7B1;
    border-radius: 10px;
    padding: 10px;
    margin: 10px;
}
.inner-box h1 {
    font-size:25px; 
}
.inner-box p {
    font-weight: 500;
    font-size: 20px ;
    line-height: 25px;
}
a{
    text-decoration: none;
}
#outer-box2, #outer-box3, #outer-box4 {
    border-radius:50%;
    text-align: center;
    display: inline-block;
    height: 140px;
    width: 140px;
    padding-top: 80px;
    color: aquamarine;
}
#outer-box2{
    background-color: rgba(0,0,255,1);
}
#outer-box3{
    background-color: rgba(0,0,255,0.75);
}
#outer-box4{
    background-color: rgba(0,0,255,0.5);
}
/*
font weight can also vary from 100 to 900
and we can also select the bold bolder and lighter
font-weight: 100;
font-weight: 200;
font-weight: 300;
font-weight: 400; normal
font-weight: 500;
font-weight: 600;
font-weight: 700; bold
font-weight: 800;
font-weight: 900;
*/
/*
text-transform can be used to manipulate the text like we can put the 
captalize to captalize the first letter of the each word in text
*/

/*
display property
value : inline / block / inline - block / none

1.inline it takes only required spaces
    Horizontal margin and padding (left and right): 
        These are respected and will push other elements away horizontally.
    Vertical margin and padding (top and bottom): 
        These are not respected. Top and bottom margins are ignored completely. 
        Top and bottom padding will be applied visually, 
        but they won't push other lines of text or elements up or down; 
        they will just overlap.
    width and height: 
        These properties are also ignored. 
    examples of inline => input, anchor, button


2.block takes full width
    examples of block => div, heading

3.An inline-block element is a hybrid. 
    It flows on the same line like an inline element, 
    but you can control its box model properties (like width, height, margin, padding) 
    just like a block element.

    All margin and padding: 
        Respected on all four sides (top, right, bottom, left). 
        It will push other elements away both horizontally and vertically.

    width and height: These properties are respected.

4. What display: none; Does
    Removes from Document Flow: The element is completely removed from the page's layout.
    Takes Up No Space: Unlike a hidden element, 
    it occupies zero space. Other elements will shift to fill the void it leaves behind.
    Inaccessible: The element (and all of its children) cannot be seen, 
    clicked on, or interacted with by the user. It's also hidden from screen readers, 
    which is an important accessibility consideration.
    Invisible: The element is not rendered visually.

    
    Feature	                display: none;	                        visibility: hidden;
    
    Effect on Layout	    Removes the element.                    Hides the element. It still occupies its original space.
                            Space is reclaimed by other 
                            elements.	

    
    Space Occupied	        None	                                The element's original width and height
    

    Interaction	            Not interactive	                        Not interactive
    

    Accessibility	        Hidden from screen readers	            Hidden from screen readers (usually)
*/

/*
Alpha Channel
rgpba : where a  is for "alpha chanel" it decides the opacitiy
*/